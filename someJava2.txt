import java.util.*;
import java.lang.*;
import java.io.*;

class Node {
    String data;
    Node next;
    
    Node(String newData){
        this.data = newData;
        this.next = null;
    }
}

class Link {
    Node head;
    Link(){
        this.head = null;
    }
    
    Node addToTail(Node head, String value){
        Node newNode = new Node(value);
        if(head == null){
            return head = newNode;
        }
        Node curr = head;
        while(curr.next != null){
            curr = curr.next;
        }
        if(curr.next == null){
            curr.next = newNode;
        }
        return head;
    }
    
    Node addToHead(Node head, String value){
        Node newNode = new Node(value);
        if(head == null){
            return head = newNode;
        }
        newNode.next = head;
        head = newNode;
        printList(head); 
        return head;
    }
    
    Node addToMiddle(Node head, Node searchNode, String value){
        Node newNode = new Node(value);
        if(head == null){
            return head = newNode;
        }
        Node curr = head;
        while(curr.next != searchNode){
            curr = curr.next;
        }
        if(curr.next == searchNode){
            Node tmp = searchNode.next;
            searchNode.next = newNode;
            newNode.next = tmp;
        }
        return head; 
    }
    
    int countList(Node head){
        int count = 0; 
        Node curr = head;
        while(curr != null){
            count++;
            curr = curr.next;
        }
        System.out.println("The number of Nodes are: " + count); 
        return count;
    }
    
    void printList(Node head){
        Node curr = head;
        while(curr != null){
            if(curr.next == null){
                System.out.print(curr.data);
            }else{
                System.out.print(curr.data + " -> ");
            }
            curr = curr.next;
        }
        System.out.println(); 
    }
}

class A {
    
    public static void main(String[] args){
        Node first = new Node("A");
        Node second = new Node("B");
        Node third = new Node("C");
        Node fourth = new Node("D");
        
        first.next = second;
        second.next = third;
        third.next = fourth;
        
        Link list = new Link();
        list.printList(first); 
        list.addToTail(first, "E");
        list.printList(first);
        list.addToMiddle(first, second, "I"); 
        list.printList(first); 
        list.countList(first);
        list.addToHead(first, "O");
        list.printList(first); 
    }
}